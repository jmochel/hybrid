H40690
s 00000/00000/00075
d D 1.6 01/09/19 08:33:35 jmochel 7 6
c Delete: TemplateCodeGenerator/src/org/mushin/templatecodegenerator/ActionTag.java
cC
cK18052
cPBitKeeper/deleted/.del-ActionTag.java~86dead9d
e
s 00019/00018/00056
d D 1.5 01/08/14 17:12:54 jmochel 6 5
c It compiles but no longer runs. I merged a lot of code from the other branch and 
cC
cK63627
e
s 00002/00000/00072
d D 1.4 01/08/03 14:21:14 jmochel 5 4
c Converting the whole shebang over to JAXP basis w/Namespaces
cC
cK65103
e
s 00012/00023/00060
d D 1.3 01/06/22 13:00:50 jmochel 4 3
c Refactoring for XML namespaces and using XML APIs internally
cC
cK55693
e
s 00000/00000/00083
d D 1.2 01/05/29 12:33:55 jmochel 3 2
c mvdir
cC
cHdevilmountain.corp.foliage.com
cK62656
cPTemplateCodeGenerator/src/org/mushin/templatecodegenerator/ActionTag.java
cZ-04:00
e
s 00083/00000/00000
d D 1.1 01/03/14 22:44:07 jmochel 2 1
cC
cF1
cK02217
cO-rw-rw-r--
e
s 00000/00000/00000
d D 1.0 01/03/14 22:44:07 jmochel 1 0
c BitKeeper file i:/Repository/TemplateCodeGenerator/src/org/mushin/templatecodegenerator/ActionTag.java
cBjmochel@mordanith.ne.mediaone.net|ChangeSet|20010315024621|04493|9033c8cd
cHmordanith.ne.mediaone.net
cK08436
cPsrc/org/mushin/templatecodegenerator/ActionTag.java
cR86dead9d
cV4
cX0xa1
cZ-05:00
e
u
U
f e 0
f x 0xa1
t
T
I 2
/*
 * The contents of this file are subject to the Artistic
 * License (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.opensource.org/licenses/artistic-license.html
D 6
 * 
E 6
I 6
 *
E 6
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
D 6
 * 
E 6
I 6
 *
E 6
 * The Original Code is "Template Code Generator".
D 6
 * 
 * The Initial Developer of the Original Code is Jim Jackl-Mochel.  
E 6
I 6
 *
 * The Initial Developer of the Original Code is Jim Jackl-Mochel.
E 6
 * Portions created by Jim Jackl-Mochel are
 * Copyright (C) 1998, 1999, 2000 Jim Jackl-Mochel.  All
 * Rights Reserved.
D 6
 * 
 * Contributor(s): 
E 6
I 6
 *
 * Contributor(s):
E 6
 */

package org.mushin.templatecodegenerator;


import java.util.Dictionary;

I 4
import org.w3c.dom.Node;
E 4

public class ActionTag
{
	/**
	 * Constructor
D 4
	 *
	 * Processes the incoming tag of the form : 
	 * 		<code>\<tagNameSpace:tagName arg="value"\></code>
	 *
E 4
I 4
     *
E 4
D 6
	 * @param   tag   
E 6
I 6
	 * Processes the incoming tag of the form :
	 * 		<code>\<tagNameSpace:tagName arg="value"\></code>
	 *
	 * @param   tag
E 6
	 */
D 6
	 
E 6
I 6

E 6
D 4
	public ActionTag(String tag)
E 4
I 4
	public ActionTag(Node node)
E 4
	{
D 4
		//
		// FIXIT - Eventually I will be parsing this but for now we fake it.
		//

		this.namespace = new String("");
		this.name = tag;
E 4
I 4
		this.m_Namespace = node.getNamespaceURI();
		this.m_Name = node.getNodeName();
//this.m_Args = node.getAttributes();
E 4
	}
D 6
	
E 6
I 6

E 6
	public String getNamespace()
	{
I 5
D 6
        System.out.println("Namespace is " + this.m_Namespace);
E 6
E 5
D 4
		return(this.namespace);
E 4
I 4
		return(this.m_Namespace);
E 4
	}
D 6
	
E 6
I 6

E 6
	public String getName()
	{
I 5
D 6
        System.out.println("Name is " + this.m_Name);
E 6
E 5
D 4
		return(this.name);
E 4
I 4
		return(this.m_Name);
E 4
D 6
	}		
	
E 6
I 6
	}

E 6
	/**
	 * The name space of the data tag
	 */
D 6
	 
E 6
I 6

E 6
D 4
	private String			namespace; 
E 4
I 4
	private String			m_Namespace;
E 4

	/**
	 * The name of the data tag
	 */
D 6
	 
E 6
I 6

E 6
D 4
	private String			name; 
E 4
I 4
	private String			m_Name;
E 4
D 6
	
E 6
I 6

E 6
	/**
	 * The arguments to be passed into the method for the data tag
	 */
D 6
	
E 6
I 6

E 6
D 4
	private Dictionary 		args;
	
	
	/**
	 * The enclosed text yet to be parsed
	 */
	
	private StringBuffer 	block;
E 4
I 4
	private Dictionary 		m_Args;

E 4
}
E 2
I 1
E 1
