H30945
s 00000/00000/00080
d D 1.5 01/09/19 08:33:42 jmochel 6 5
c Delete: TemplateCodeGenerator/src/org/mushin/templatecodegenerator/DataTag.java
cC
cK29547
cPBitKeeper/deleted/.del-DataTag.java~8ad047e1
e
s 00013/00014/00067
d D 1.4 01/08/16 09:49:48 jmochel 5 4
c More adaptations to XML DOM
cC
cK05340
e
s 00014/00014/00067
d D 1.3 01/06/22 13:00:50 jmochel 4 3
c Refactoring for XML namespaces and using XML APIs internally
cC
cK04178
e
s 00000/00000/00081
d D 1.2 01/05/29 12:33:56 jmochel 3 2
c mvdir
cC
cHdevilmountain.corp.foliage.com
cK57951
cPTemplateCodeGenerator/src/org/mushin/templatecodegenerator/DataTag.java
cZ-04:00
e
s 00081/00000/00000
d D 1.1 01/03/14 22:45:04 jmochel 2 1
cC
cF1
cK63970
cO-rw-rw-r--
e
s 00000/00000/00000
d D 1.0 01/03/14 22:45:04 jmochel 1 0
c BitKeeper file i:/Repository/TemplateCodeGenerator/src/org/mushin/templatecodegenerator/DataTag.java
cBjmochel@mordanith.ne.mediaone.net|ChangeSet|20010315024621|04493|9033c8cd
cHmordanith.ne.mediaone.net
cK03913
cPsrc/org/mushin/templatecodegenerator/DataTag.java
cR8ad047e1
cV4
cX0xa1
cZ-05:00
e
u
U
f e 0
f x 0xa1
t
T
I 2
/*
 * The contents of this file are subject to the Artistic
 * License (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.opensource.org/licenses/artistic-license.html
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is "Template Code Generator".
 * 
 * The Initial Developer of the Original Code is Jim Jackl-Mochel.  
 * Portions created by Jim Jackl-Mochel are
 * Copyright (C) 1998, 1999, 2000 Jim Jackl-Mochel.  All
 * Rights Reserved.
 * 
 * Contributor(s): 
 */

package org.mushin.templatecodegenerator;

I 5
import org.w3c.dom.Node;

E 5
D 4
import java.util.HashMap;
E 4
I 4
import java.util.Dictionary;
E 4

public class DataTag
{
	/**
	 * Constructor
	 *
	 * Processes the incoming tag of the form : 
	 * 		<code>\<tagNameSpace:tagName arg="value"\></code>
	 *
	 * @param   tag   
	 */
D 5
	 
D 4
	public DataTag(String tag)
E 4
I 4
	public DataTag(String name, String nameSpace, Dictionary args)
E 5
I 5

	public DataTag(Node node)
E 5
E 4
	{
		// Initialize variables
D 5
		
D 4
		this.args = new HashMap();
E 4
I 4
		this.m_args = args;
E 4
		
		// parse the tag
E 5

D 4
		this.namespace = new String("");
		this.name = tag;
E 4
I 4
D 5
		this.m_nameSpace = nameSpace;
		this.m_name = name;
E 5
I 5
        this.m_Namespace = node.getNamespaceURI();
		this.m_Name = node.getNodeName();
//this.m_Args = node.getAttributes();
E 5
E 4
	}

D 4
	public HashMap	getArgs()
E 4
I 4
	public Dictionary	getArgs()
E 4
	{
D 4
		return this.args;
E 4
I 4
D 5
		return this.m_args;
E 5
I 5
		return this.m_Args;
E 5
E 4
	}

	public String getNamespace()
	{
D 4
		return this.namespace;
E 4
I 4
D 5
		return this.m_nameSpace;
E 5
I 5
		return this.m_Namespace;
E 5
E 4
	}
	
	public String getName()
	{
D 4
		return this.name;
E 4
I 4
D 5
		return this.m_name;
E 5
I 5
		return this.m_Name;
E 5
E 4
	}
	
	/**
D 4
	 * The namespace  of the data tag
E 4
I 4
	 * The m_nameSpace  of the data tag
E 4
	 */
	 
D 4
	private String		namespace; 
E 4
I 4
D 5
	private String		m_nameSpace; 
E 5
I 5
	private String		m_Namespace;
E 5
E 4

	/**
D 4
	 * The name of the data tag
E 4
I 4
	 * The m_name of the data tag
E 4
	 */
	 
D 4
	private String		name; 
E 4
I 4
D 5
	private String		m_name; 
E 5
I 5
	private String		m_Name;
E 5
E 4
	
	/**
	 * The arguments to be passed into the method for the data tag
	 */
	
D 4
	private HashMap		args;
E 4
I 4
D 5
	private Dictionary		m_args;
E 5
I 5
	private Dictionary		m_Args;
E 5
E 4
}
E 2
I 1
E 1
