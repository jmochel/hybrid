package mushin.frp.astronomy.stellarobject.catalog;

import java.util.Vector;
import java.util.Enumeration;
import java.util.Collection;
import java.util.Iterator;

public class Type
{
    /** Tracks the current upper bound on the ordinals for the constants */

    private static int m_UpperBound = 0;

    /** The ordinal for the given constant */

    public final int ordinal;

    /** The text string for the constant */

    private String m_TextId;

    /** Constructor for creating the constants */

    private Type(String id)
    {
        this.m_TextId = id;
        this.ordinal = this.m_UpperBound++;
        this.m_Constants.add(this);
    }

    /**
     *    	equals overload
     *		@see java.lang.Object#equals
     */

    public boolean equals(Type other)
    {
        return (this.ordinal == other.ordinal);
    }

    /** toString overload */

    public String toString()
    {
        return this.m_TextId;
    }

    /** Implement the Enumeration interface */

    public static Enumeration elements()
    {
        return m_Constants.elements();
    }

    /** Implement the Collection interface */

    public static Iterator iterator()
    {
        return m_Constants.iterator();
    }

    /** The grouped constants (for providing the Enumeration and Collections interfaces) */

    private static Vector m_Constants = new Vector();

    /** Constant for Gliese Type */

    public static final Type GLIESE = new Type("Gliese");

    /** Constant for Hipparcos Type */

    public static final Type HIPPARCOS = new Type("Hipparcos");

    /** Constant for Tycho Type */

    public static final Type TYCHO = new Type("Tycho");

    /** Constant for SH Type */

    public static final Type SH = new Type("SH");
}
