h57456
s 00045/00000/00000
d D 1.1 00/08/14 16:15:54 jmochel 2 1
cC
cF1
cK24550
cO-rw-rw-rw-
e
s 00000/00000/00000
d D 1.0 00/08/14 16:15:54 jmochel 1 0
c BitKeeper file F:/Repository/CodeGen/lib/proxy.jt
cBjmochel@devilmountain|ChangeSet|20000814201452|24445|7a8511c8
cHdevilmountain
cK08344
cPlib/proxy.jt
cR87a7c9e7
cV3
cX0x1a1
cZ-04:00
c______________________________________________________________________
e
u
U
f e 0
f x 0x1a1
t
T
I 2
// This code has been generated. Do not modify!

import dynproxy.*;

public class <className/>Proxy
  implements <className/>
{
   MethodInvocationHandler mih;

	Method[] m;

   public <className/>Proxy(MethodInvocationHandler mih)
   {
     	this.mih = mih;
     
     	Class clazz = <className/>.class;
	   Method[] classM = clazz.getMethods();
     	m = new Method[classM.length];

		int i = 0;
		<publicMethod>
		m[i++] = clazz.getMethod("<methodName/>", new Class[] { <parameter><type/>.class<comma/></parameter> });
		</publicMethod>

   }
   
   <publicMethod>
   public <returnType/> <methodName/>(<parameter><type/> <name/><comma/></parameter>)
      <hasExceptions>throws <exception><type/><comma/></exception></hasExceptions>
   {
   	try
   	{
   		return (<returnType/>)mih.invoke(this, m[<methodNr/>], new Object[] {<parameter><name/><comma/></parameter>});
   	} catch (Exception e)
   	{
   		<exception>
   		if (e instanceof <type/>)
   			throw (<type/>)e;
	   	</exception>
	   	
	   	throw new RuntimeException("Undeclared exception thrown",e.getMessage());
   	}
   }
   </publicMethod>
}
E 2N
I 1
E 1
