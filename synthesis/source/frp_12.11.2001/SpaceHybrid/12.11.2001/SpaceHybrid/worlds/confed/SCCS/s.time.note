h03501
s 00058/00000/00000
d D 1.1 99/12/02 16:00:20 jmochel 2 1
cC
cK31033
cO-rw-rw-rw-
e
s 00000/00000/00000
d D 1.0 99/12/02 16:00:16 jmochel 1 0
c BitKeeper file G:/SpaceHybrid/worlds/confed/time.note
cBjmochel@devilmountain.bedford.foliage.com|ChangeSet|19991202203126|52994|e2968a7f5cb68f67
cHdevilmountain.bedford.foliage.com
cK45002
cPworlds/confed/time.note
cReb4786565cb68f68
cZ-05:00
c______________________________________________________________________
e
u
U
f e 0
f x 33
t
T
I 2

> Does anyone know how to remove the weekend days from the
> timeformatting short of hacking the code with a calendar?

Okay, I had a go at the proposed plan ; patch appended.

gnuplot seems to have a complete recoding of the standard ansi fns for
time (strftime, etc)..? tm_wday was not implemented previously in
ggmtime(), so I've had a go, but it could very easily be wrong, either
fundamentally, or off by one or more. ggmtime() is in util.c

This patch adds a function timecolumn(x), which is similar to column(x)
but converts a time instead. column(1) is same as $1, but there is no
symbolic form for timecolumn(x) yet - as I said, I am tempted to try
to implement $"format"n - $""n would be a time using the default format
(set timefmt)

It also adds functions tm_sec(), tm_wday(), etc - one for each field in
c's struct tm

There was a bug in the code for xdtics/xmtics, which is also addressed here.
In a perfect world, a graph made with something like

set timefmt "%d/%m/%y"
set xdtics
plot '-' using (tm_wday(timecolumn(1))):2 w l
21/1/96 1
22/1/96 3
23/1/96 2
24/1/96 6
25/1/96 1
26/1/96 4
27/1/96 3
28/1/96 2
29/1/96 3
30/1/96 5
31/1/96 3
1/2/96 8
2/2/96 1
3/2/96 3
e

would be correct, but I don't know offhand if xdtics uses the same
numeric assignments to days as tm_wday. And as I said, tm_wday may be off
by one or more.

Note that I did not set xdata time. If I was doing the timeseries from
scratch, I'd probably forgo that command, read the time from the file
via timecolumn(x) or $".."n, and have set xtics time instead.

timecolumn() is itself a bit of a kludge. I think that in an ideal world,
it would be equivalent to time(stringcolumn(x)) which is a much more general
approach, but gnuplot doesn't have string variables yet...

I wonder if gnuplot should be like awk, implcitly converting between numeric
and string formats as required. It's a tempting thought...

dd
E 2
I 1
E 1
